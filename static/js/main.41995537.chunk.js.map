{"version":3,"sources":["components/Navbar.jsx","components/Textarea.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","brandname","type","id","home","About","Contact","defaultProps","Textarea","useState","text","setText","heading","value","onChange","event","target","rows","onClick","console","log","upcase","toUpperCase","lowcase","toLowerCase","word","split","length","character","copytext","document","getElementById","select","navigator","clipboard","writeText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2MAGe,SAASA,EAAOC,GAC7B,OACE,8BACE,qBAAKC,UAAU,gDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SACGF,EAAMG,YAET,wBACEF,UAAU,iBACVG,KAAK,SACL,iBAAe,WACf,iBAAe,aACf,gBAAc,YACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMH,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BI,GAAG,YAA7C,SACE,qBAAIJ,UAAU,aAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,SACCF,EAAMM,SAGT,oBAAIL,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,cAA7B,SACCF,EAAMO,UAGT,oBAAIN,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,SACCF,EAAMQ,wBAkBvBT,EAAOU,aAAa,CAChBN,UAAU,iBACdG,KAAK,gBACLC,MAAM,iBACNC,QAAQ,oB,WCvDO,SAASE,EAASV,GAC/B,IA4BA,EAAwBW,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACF,mCACA,gCACM,oBAAIZ,UAAU,cAAd,SAA6BD,EAAMc,UACnC,qBAAKb,UAAU,OAAf,SACE,0BACEA,UAAU,eACVc,MAAOH,EACPI,SAZW,SAACC,GAClBJ,EAAQI,EAAMC,OAAOH,QAYfV,GAAG,MACHc,KAAK,QAGP,wBAAQlB,UAAU,4BAA4BmB,QA1ClC,WAChBC,QAAQC,IAAI,4BACZ,IAAIC,EAASX,EAAKY,cAClBX,EAAQU,IAuCJ,kCAGA,wBAAQtB,UAAU,4BAA4BmB,QAxClC,WAChBC,QAAQC,IAAI,4BACZ,IAAIG,EAAUb,EAAKc,cACnBb,EAAQY,IAqCJ,kCAGA,wBAAQxB,UAAU,4BAA4BmB,QAtCxC,WACd,IAAIO,EAAKf,EAAKgB,MAAM,KAAKC,OACpBC,EAAUlB,EAAKiB,OACnBhB,EAAQc,EAAK,cAAcG,EAAU,iBAmC9B,uBAGA,wBAAQ7B,UAAU,4BAA4BmB,QAnCrC,WACb,IAAIW,EAASC,SAASC,eAAe,OACpCF,EAASG,SACVC,UAAUC,UAAUC,UAAUN,EAAShB,QAgCnC,uBAGA,wBAAQd,UAAU,4BAA4BmB,QAhCxC,WACRP,EAAQ,KA+BN,wBCtCOyB,MAdf,WACE,OACF,qCACI,cAACvC,EAAD,CAAQI,UAAU,gBAAgBG,KAAK,OAAOC,MAAM,QAAQC,QAAQ,YACpE,qBAAKP,UAAU,iBAAf,SACH,cAACS,EAAD,CAAUI,QAAQ,wBCCJyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASC,eAAe,SAM1BM,K","file":"static/js/main.41995537.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.brandname}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                {props.home}\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"./About.jsx\">\r\n                {props.About}\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                {props.Contact}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n// assigned propTypes to avoid any issues in future\r\nNavbar.propTypes={\r\n    brandname:PropTypes.string,\r\nhome:PropTypes.string,\r\nabout:PropTypes.string,\r\ncontact:PropTypes.string\r\n}\r\n// assigned default props \r\nNavbar.defaultProps={\r\n    brandname:'Set Brand Name',\r\nhome:'Set home here',\r\nAbout:'Set about here',\r\nContact:'Set contact here'\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Textarea(props) {\r\n  const upperCase = () => {\r\n    console.log(\"Uppercase Button Clicked\");\r\n    let upcase = text.toUpperCase();\r\n    setText(upcase);\r\n  };\r\n  const lowerCase = () => {\r\n    console.log(\"Lowercase Button Clicked\");\r\n    let lowcase = text.toLowerCase();\r\n    setText(lowcase);\r\n  };\r\n  const count=()=>{\r\nlet word=text.split(\" \").length;\r\n let character=text.length;\r\n setText(word+\" words and \"+character+\" characters!\")\r\n  }\r\n  \r\n  const copytext=()=>{\r\n    let copytext=document.getElementById('Box');\r\n     copytext.select();\r\n    navigator.clipboard.writeText(copytext.value);\r\n      }\r\n\r\n  const clear=()=>{\r\n      setText(\"\");\r\n  }\r\n  const textchange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n<>\r\n<div>\r\n      <h1 className=\"text-center\">{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={textchange}\r\n          id=\"Box\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n    </div>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={upperCase}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={lowerCase}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={count}>\r\n          Get Count\r\n        </button>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={copytext}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary my-2 mx-2\" onClick={clear}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n      {/* <div className=\"container my-3\">\r\n        <h3>Words & Characters Count :</h3>\r\n        \r\n      </div> */}\r\n\r\n</>    \r\n  );\r\n}\r\n","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\n\nfunction App() {\n  return (\n<>\n    <Navbar brandname=\"Text Analysis\" home=\"Home\" About=\"About\" Contact=\"Contact\"/>\n    <div className=\"container my-4\">\n <Textarea heading=\"Text Analyzer\"/>\n {/* <About/> */}\n </div>\n \n \n  </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}